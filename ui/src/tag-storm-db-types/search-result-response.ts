// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-redundant-type-constituents */

import * as flatbuffers from "flatbuffers";

import { ResponseType, unionToResponseType, unionListToResponseType } from "../tag-storm-db-types/response-type.js";

export class SearchResultResponse {
	bb: flatbuffers.ByteBuffer | null = null;
	bb_pos = 0;
	__init(i: number, bb: flatbuffers.ByteBuffer): SearchResultResponse {
		this.bb_pos = i;
		this.bb = bb;
		return this;
	}

	static getRootAsSearchResultResponse(bb: flatbuffers.ByteBuffer, obj?: SearchResultResponse): SearchResultResponse {
		return (obj || new SearchResultResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
	}

	static getSizePrefixedRootAsSearchResultResponse(
		bb: flatbuffers.ByteBuffer,
		obj?: SearchResultResponse,
	): SearchResultResponse {
		bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
		return (obj || new SearchResultResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
	}

	dataType(): ResponseType {
		const offset = this.bb!.__offset(this.bb_pos, 4);
		return offset ? this.bb!.readUint8(this.bb_pos + offset) : ResponseType.NONE;
	}

	data<T extends flatbuffers.Table>(obj: any): any | null {
		const offset = this.bb!.__offset(this.bb_pos, 6);
		return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
	}

	static startSearchResultResponse(builder: flatbuffers.Builder) {
		builder.startObject(2);
	}

	static addDataType(builder: flatbuffers.Builder, dataType: ResponseType) {
		builder.addFieldInt8(0, dataType, ResponseType.NONE);
	}

	static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {
		builder.addFieldOffset(1, dataOffset, 0);
	}

	static endSearchResultResponse(builder: flatbuffers.Builder): flatbuffers.Offset {
		const offset = builder.endObject();
		return offset;
	}

	static finishSearchResultResponseBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
		builder.finish(offset);
	}

	static finishSizePrefixedSearchResultResponseBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
		builder.finish(offset, undefined, true);
	}

	static createSearchResultResponse(
		builder: flatbuffers.Builder,
		dataType: ResponseType,
		dataOffset: flatbuffers.Offset,
	): flatbuffers.Offset {
		SearchResultResponse.startSearchResultResponse(builder);
		SearchResultResponse.addDataType(builder, dataType);
		SearchResultResponse.addData(builder, dataOffset);
		return SearchResultResponse.endSearchResultResponse(builder);
	}
}

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: TagStormDb

import flatbuffers
from flatbuffers.compat import import_numpy
from tag_machine_api.TagStormDb.Hash import Hash
np = import_numpy()

class HashResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = HashResponse()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsHashResponse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # HashResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HashResponse
    def Hashes(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 32
            obj = Hash()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # HashResponse
    def HashesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # HashResponse
    def HashesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def HashResponseStart(builder):
    builder.StartObject(1)

def Start(builder):
    HashResponseStart(builder)

def HashResponseAddHashes(builder, hashes):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(hashes), 0)

def AddHashes(builder, hashes):
    HashResponseAddHashes(builder, hashes)

def HashResponseStartHashesVector(builder, numElems):
    return builder.StartVector(32, numElems, 1)

def StartHashesVector(builder, numElems):
    return HashResponseStartHashesVector(builder, numElems)

def HashResponseEnd(builder):
    return builder.EndObject()

def End(builder):
    return HashResponseEnd(builder)
